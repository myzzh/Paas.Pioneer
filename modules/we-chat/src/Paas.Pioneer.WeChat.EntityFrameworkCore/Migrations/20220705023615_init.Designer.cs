// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Paas.Pioneer.WeChat.EntityFrameworkCore.EntityFrameworkCore;
using Volo.Abp.EntityFrameworkCore;

#nullable disable

namespace Paas.Pioneer.WeChat.EntityFrameworkCore.Migrations
{
    [DbContext(typeof(WeChatsDbContext))]
    [Migration("20220705023615_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("_Abp_DatabaseProvider", EfCoreDatabaseProvider.MySql)
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Paas.Pioneer.WeChat.Domain.WeChatApps.WeChatApp", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("AppId")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AppId")
                        .HasComment("微信AppId");

                    b.Property<string>("AppSecret")
                        .HasColumnType("varchar(150)")
                        .HasColumnName("AppSecret")
                        .HasComment("App密钥");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("CreatorId")
                        .HasComment("创建人");

                    b.Property<string>("DisplayName")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DisplayName")
                        .HasComment("显示名称");

                    b.Property<string>("EncodingAesKey")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("EncodingAesKey")
                        .HasComment("微信密钥");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<bool>("IsStatic")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否静态");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("LastModificationTime")
                        .HasComment("修改时间");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("char(36)")
                        .HasColumnName("LastModifierId")
                        .HasComment("修改人");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Name")
                        .HasComment("名称");

                    b.Property<string>("OpenAppIdOrName")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("OpenAppIdOrName")
                        .HasComment("开放Id或者名称");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("char(36)")
                        .HasColumnName("TenantId")
                        .HasComment("租户Id");

                    b.Property<string>("Token")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Token")
                        .HasComment("微信Token");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("Type")
                        .HasComment("微信app类型");

                    b.Property<Guid?>("WeChatComponentId")
                        .HasColumnType("char(36)")
                        .HasColumnName("WeChatComponentId")
                        .HasComment("微信组件Id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "AppId" }, "IDX_AppId");

                    b.HasIndex(new[] { "Name" }, "IDX_Name");

                    b.ToTable("WeChat_App");

                    b.HasComment("数据字典");
                });

            modelBuilder.Entity("Paas.Pioneer.WeChat.Domain.WeChatAppUsers.WeChatAppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("CreatorId")
                        .HasComment("创建人");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("LastModificationTime")
                        .HasComment("修改时间");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("char(36)")
                        .HasColumnName("LastModifierId")
                        .HasComment("修改人");

                    b.Property<string>("OpenId")
                        .HasColumnType("varchar(150)")
                        .HasColumnName("OpenId")
                        .HasComment("OpenId");

                    b.Property<string>("SessionKey")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("SessionKey")
                        .HasComment("SessionKey");

                    b.Property<DateTime?>("SessionKeyChangedTime")
                        .HasColumnType("datetime(6)")
                        .HasComment("SessionKey修改时间");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("char(36)")
                        .HasColumnName("TenantId")
                        .HasComment("租户Id");

                    b.Property<string>("UnionId")
                        .HasColumnType("varchar(150)")
                        .HasColumnName("UnionId")
                        .HasComment("UnionId");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)")
                        .HasColumnName("UserId")
                        .HasComment("用户Id");

                    b.Property<Guid>("WeChatAppId")
                        .HasColumnType("char(36)")
                        .HasColumnName("WeChatAppId")
                        .HasComment("微信appId");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "IDX_UserId");

                    b.HasIndex(new[] { "WeChatAppId" }, "IDX_WeChatAppId");

                    b.ToTable("WeChat_AppUser");

                    b.HasComment("数据字典");
                });

            modelBuilder.Entity("Volo.Abp.TenantManagement.Tenant", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("char(36)")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("longtext")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("char(36)")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("AbpTenants", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.TenantManagement.TenantConnectionString", b =>
                {
                    b.Property<Guid>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)");

                    b.HasKey("TenantId", "Name");

                    b.ToTable("AbpTenantConnectionStrings", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.TenantManagement.TenantConnectionString", b =>
                {
                    b.HasOne("Volo.Abp.TenantManagement.Tenant", null)
                        .WithMany("ConnectionStrings")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.TenantManagement.Tenant", b =>
                {
                    b.Navigation("ConnectionStrings");
                });
#pragma warning restore 612, 618
        }
    }
}
