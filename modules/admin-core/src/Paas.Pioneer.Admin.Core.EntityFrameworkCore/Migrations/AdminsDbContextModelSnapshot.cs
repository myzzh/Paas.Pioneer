// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Paas.Pioneer.Admin.Core.EntityFrameworkCore.EntityFrameworkCore;
using Volo.Abp.EntityFrameworkCore;

#nullable disable

namespace Paas.Pioneer.Admin.Core.EntityFrameworkCore.Migrations
{
    [DbContext(typeof(AdminsDbContext))]
    partial class AdminsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("_Abp_DatabaseProvider", EfCoreDatabaseProvider.MySql)
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Paas.Pioneer.Admin.Core.Domain.Api.Ad_ApiEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("CreatorId")
                        .HasComment("创建人");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Description")
                        .HasComment("说明");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Enabled")
                        .HasComment("启用");

                    b.Property<string>("HttpMethods")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("HttpMethods")
                        .HasComment("接口提交方法");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<string>("Label")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Label")
                        .HasComment("接口名称");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("LastModificationTime")
                        .HasComment("修改时间");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("char(36)")
                        .HasColumnName("LastModifierId")
                        .HasComment("修改人");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Name")
                        .HasComment("接口命名");

                    b.Property<Guid>("ParentId")
                        .HasColumnType("char(36)")
                        .HasColumnName("ParentId")
                        .HasComment("所属模块");

                    b.Property<string>("Path")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Path")
                        .HasComment("接口地址");

                    b.Property<int>("Sort")
                        .HasColumnType("int")
                        .HasColumnName("Sort")
                        .HasComment("排序");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ParentId" }, "IDX_ParentId");

                    b.ToTable("Ad_Api");

                    b.HasComment("接口管理");
                });

            modelBuilder.Entity("Paas.Pioneer.Admin.Core.Domain.Dictionary.Ad_DictionaryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Code")
                        .HasComment("字典编码");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("CreatorId")
                        .HasComment("创建人");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Description")
                        .HasComment("描述");

                    b.Property<Guid>("DictionaryTypeId")
                        .HasColumnType("char(36)")
                        .HasColumnName("DictionaryTypeId")
                        .HasComment("字典类型Id");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Enabled")
                        .HasComment("启用");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("LastModificationTime")
                        .HasComment("修改时间");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("char(36)")
                        .HasColumnName("LastModifierId")
                        .HasComment("修改人");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Name")
                        .HasComment("文章标题");

                    b.Property<int>("Sort")
                        .HasColumnType("int")
                        .HasColumnName("Sort")
                        .HasComment("排序");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("char(36)")
                        .HasColumnName("TenantId")
                        .HasComment("租户Id");

                    b.Property<string>("Value")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Value")
                        .HasComment("字典值");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Code" }, "IDX_Code");

                    b.HasIndex(new[] { "DictionaryTypeId" }, "IDX_DictionaryTypeId");

                    b.ToTable("Ad_Dictionary");

                    b.HasComment("数据字典");
                });

            modelBuilder.Entity("Paas.Pioneer.Admin.Core.Domain.DictionaryType.Ad_DictionaryTypeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Code")
                        .HasComment("编码");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("CreatorId")
                        .HasComment("创建人");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Description")
                        .HasComment("描述");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Enabled")
                        .HasComment("启用");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("LastModificationTime")
                        .HasComment("修改时间");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("char(36)")
                        .HasColumnName("LastModifierId")
                        .HasComment("修改人");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Name")
                        .HasComment("文章标题");

                    b.Property<int>("Sort")
                        .HasColumnType("int")
                        .HasColumnName("Sort")
                        .HasComment("排序");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("char(36)")
                        .HasColumnName("TenantId")
                        .HasComment("租户Id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Code" }, "IDX_Code")
                        .HasDatabaseName("IDX_Code1");

                    b.ToTable("Ad_Dictionary_Type");

                    b.HasComment("数据字典类型");
                });

            modelBuilder.Entity("Paas.Pioneer.Admin.Core.Domain.Document.Ad_DocumentEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("Content")
                        .HasColumnType("longtext")
                        .HasColumnName("Content")
                        .HasComment("内容");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("CreatorId")
                        .HasComment("创建人");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Description")
                        .HasComment("描述");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Enabled")
                        .HasComment("启用");

                    b.Property<string>("Html")
                        .HasColumnType("longtext")
                        .HasColumnName("Html")
                        .HasComment("Html");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<string>("Label")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Label")
                        .HasComment("名称");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("LastModificationTime")
                        .HasComment("修改时间");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("char(36)")
                        .HasColumnName("LastModifierId")
                        .HasComment("修改人");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Name")
                        .HasComment("命名");

                    b.Property<bool?>("Opened")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Opened")
                        .HasComment("打开组");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("char(36)")
                        .HasColumnName("ParentId")
                        .HasComment("父级节点");

                    b.Property<int>("Sort")
                        .HasColumnType("int")
                        .HasColumnName("Sort")
                        .HasComment("排序");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("char(36)")
                        .HasColumnName("TenantId")
                        .HasComment("租户Id");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("Type")
                        .HasComment("类型");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ParentId" }, "IDX_ParentId")
                        .HasDatabaseName("IDX_ParentId1");

                    b.ToTable("Ad_Document");

                    b.HasComment("文档表");
                });

            modelBuilder.Entity("Paas.Pioneer.Admin.Core.Domain.DocumentImage.Ad_DocumentImageEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("CreatorId")
                        .HasComment("创建人");

                    b.Property<Guid>("DocumentId")
                        .HasColumnType("char(36)")
                        .HasColumnName("DocumentId")
                        .HasComment("文档Id");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("LastModificationTime")
                        .HasComment("修改时间");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("char(36)")
                        .HasColumnName("LastModifierId")
                        .HasComment("修改人");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("char(36)")
                        .HasColumnName("TenantId")
                        .HasComment("租户Id");

                    b.Property<string>("Url")
                        .HasColumnType("longtext")
                        .HasComment("文档Id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "DocumentId" }, "IDX_DocumentId");

                    b.ToTable("Ad_Document_Image");

                    b.HasComment("文档图片表");
                });

            modelBuilder.Entity("Paas.Pioneer.Admin.Core.Domain.LoginLog.Ad_LoginLogEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("Browser")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Browser")
                        .HasComment("浏览器");

                    b.Property<string>("BrowserInfo")
                        .HasColumnType("longtext")
                        .HasColumnName("BrowserInfo")
                        .HasComment("浏览器信息");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("CreatorId")
                        .HasComment("创建人");

                    b.Property<string>("Device")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Device")
                        .HasComment("设备");

                    b.Property<long>("ElapsedMilliseconds")
                        .HasColumnType("bigint")
                        .HasColumnName("ElapsedMilliseconds")
                        .HasComment("耗时（毫秒）");

                    b.Property<string>("IP")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("IP")
                        .HasComment("IP");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("LastModificationTime")
                        .HasComment("修改时间");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("char(36)")
                        .HasColumnName("LastModifierId")
                        .HasComment("修改人");

                    b.Property<string>("Msg")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Msg")
                        .HasComment("操作消息");

                    b.Property<string>("NickName")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NickName")
                        .HasComment("昵称");

                    b.Property<string>("Os")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Os")
                        .HasComment("操作系统");

                    b.Property<string>("Result")
                        .HasColumnType("longtext")
                        .HasColumnName("Result")
                        .HasComment("操作结果");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Status")
                        .HasComment("操作状态");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("char(36)")
                        .HasColumnName("TenantId")
                        .HasComment("租户Id");

                    b.HasKey("Id");

                    b.ToTable("Ad_Login_Log");

                    b.HasComment("登录日志表");
                });

            modelBuilder.Entity("Paas.Pioneer.Admin.Core.Domain.LowCodeTable.Ad_LowCodeTableEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("CreatorId")
                        .HasComment("创建人");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Description")
                        .HasComment("描述");

                    b.Property<string>("FunctionModule")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("FunctionModule")
                        .HasComment("所属功能模块（业务场景）");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<string>("LowCodeTableName")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("LowCodeTableName")
                        .HasComment("表名");

                    b.Property<string>("MenuName")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("MenuName")
                        .HasComment("菜单名称");

                    b.Property<Guid?>("MenuParentId")
                        .HasColumnType("char(36)")
                        .HasColumnName("MenuParentId")
                        .HasComment("所属节点（菜单父级Id）");

                    b.Property<string>("Taxon")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Taxon")
                        .HasComment("代码类名");

                    b.HasKey("Id");

                    b.ToTable("Ad_LowCodeTable");

                    b.HasComment("低代码表格");
                });

            modelBuilder.Entity("Paas.Pioneer.Admin.Core.Domain.LowCodeTableConfig.Ad_LowCodeTableConfigEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("ColumnName")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ColumnName")
                        .HasComment("字段名");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("CreatorId")
                        .HasComment("创建人");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Description")
                        .HasComment("描述");

                    b.Property<int>("InputType")
                        .HasColumnType("int")
                        .HasColumnName("InputType")
                        .HasComment("输入类型");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<bool>("IsNullable")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("IsNullable")
                        .HasComment("是否为可空类型");

                    b.Property<bool>("IsWebAdd")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("IsWebAdd")
                        .HasComment("是否需要前端添加");

                    b.Property<bool>("IsWebSelect")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("IsWebSelect")
                        .HasComment("是否需要前端查询");

                    b.Property<bool>("IsWebShow")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("IsWebShow")
                        .HasComment("是否需要前端显示");

                    b.Property<bool>("IsWebUpdate")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("IsWebUpdate")
                        .HasComment("是否需要前端修改");

                    b.Property<Guid>("LowCodeTableId")
                        .HasColumnType("char(36)")
                        .HasColumnName("LowCodeTableId")
                        .HasComment("LowCodeTableId,父Id");

                    b.Property<int>("QueryType")
                        .HasColumnType("int")
                        .HasColumnName("QueryType")
                        .HasComment("查询方式");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "LowCodeTableId" }, "IDX_LowCodeTableId");

                    b.ToTable("Ad_LowCodeTableConfig");

                    b.HasComment("低代码表格配置");
                });

            modelBuilder.Entity("Paas.Pioneer.Admin.Core.Domain.Permission.Ad_PermissionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<bool>("Closable")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Closable")
                        .HasComment("可关闭");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Code")
                        .HasComment("权限编码");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("CreatorId")
                        .HasComment("创建人");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Description")
                        .HasComment("描述");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Enabled")
                        .HasComment("启用");

                    b.Property<bool>("External")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("External")
                        .HasComment("链接外显");

                    b.Property<bool>("Hidden")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Hidden")
                        .HasComment("隐藏");

                    b.Property<string>("Icon")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Icon")
                        .HasComment("图标");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<string>("Label")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Label")
                        .HasComment("权限名称");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("LastModificationTime")
                        .HasComment("修改时间");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("char(36)")
                        .HasColumnName("LastModifierId")
                        .HasComment("修改人");

                    b.Property<bool>("NewWindow")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("NewWindow")
                        .HasComment("打开新窗口");

                    b.Property<bool>("Opened")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Opened")
                        .HasComment("打开组");

                    b.Property<Guid>("ParentId")
                        .HasColumnType("char(36)")
                        .HasColumnName("ParentId")
                        .HasComment("父级节点");

                    b.Property<string>("Path")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Path")
                        .HasComment("菜单访问地址");

                    b.Property<int>("Sort")
                        .HasColumnType("int")
                        .HasColumnName("Sort")
                        .HasComment("排序");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("Type")
                        .HasComment("权限类型");

                    b.Property<Guid?>("ViewId")
                        .HasColumnType("char(36)")
                        .HasColumnName("ViewId")
                        .HasComment("视图");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ParentId" }, "IDX_ParentId")
                        .HasDatabaseName("IDX_ParentId2");

                    b.ToTable("Ad_Permission");

                    b.HasComment("权限表");
                });

            modelBuilder.Entity("Paas.Pioneer.Admin.Core.Domain.PermissionApi.Ad_PermissionApiEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ApiId")
                        .HasColumnType("char(36)")
                        .HasColumnName("ApiId")
                        .HasComment("接口Id");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("CreatorId")
                        .HasComment("创建人");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("char(36)")
                        .HasColumnName("PermissionId")
                        .HasComment("权限Id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ApiId" }, "IDX_ApiId");

                    b.HasIndex(new[] { "PermissionId" }, "IDX_PermissionId");

                    b.ToTable("Ad_Permission_Api");

                    b.HasComment("权限接口表");
                });

            modelBuilder.Entity("Paas.Pioneer.Admin.Core.Domain.Personnel.Employee.Pe_EmployeeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Code")
                        .HasComment("工号");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("CreatorId")
                        .HasComment("创建人");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Email")
                        .HasComment("邮箱");

                    b.Property<DateTime?>("EntryTime")
                        .HasColumnType("datetime")
                        .HasColumnName("EntryTime")
                        .HasComment("入职时间");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("LastModificationTime")
                        .HasComment("修改时间");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("char(36)")
                        .HasColumnName("LastModifierId")
                        .HasComment("修改人");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Name")
                        .HasComment("姓名");

                    b.Property<string>("NickName")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NickName")
                        .HasComment("昵称");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("char(36)")
                        .HasColumnName("OrganizationId")
                        .HasComment("主属部门Id");

                    b.Property<string>("Phone")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Phone")
                        .HasComment("手机号");

                    b.Property<Guid>("PositionId")
                        .HasColumnType("char(36)")
                        .HasColumnName("PositionId")
                        .HasComment("职位Id");

                    b.Property<Guid?>("PrimaryEmployeeId")
                        .HasColumnType("char(36)")
                        .HasColumnName("PrimaryEmployeeId")
                        .HasComment("主管Id");

                    b.Property<int>("Sex")
                        .HasColumnType("int")
                        .HasColumnName("Sex")
                        .HasComment("性别");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("char(36)")
                        .HasColumnName("TenantId")
                        .HasComment("租户Id");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)")
                        .HasColumnName("UserId")
                        .HasComment("用户Id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "OrganizationId" }, "IDX_OrganizationId");

                    b.HasIndex(new[] { "PositionId" }, "IDX_PositionId");

                    b.HasIndex(new[] { "PrimaryEmployeeId" }, "IDX_PrimaryEmployeeId");

                    b.HasIndex(new[] { "UserId" }, "IDX_UserId");

                    b.ToTable("Pe_Employee");

                    b.HasComment("员工表");
                });

            modelBuilder.Entity("Paas.Pioneer.Admin.Core.Domain.Personnel.Organization.Pe_OrganizationEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Code")
                        .HasComment("编码");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("CreatorId")
                        .HasComment("创建人");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Description")
                        .HasComment("描述");

                    b.Property<int>("EmployeeCount")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeCount")
                        .HasComment("员工人数");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Enabled")
                        .HasComment("启用");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("LastModificationTime")
                        .HasComment("修改时间");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("char(36)")
                        .HasColumnName("LastModifierId")
                        .HasComment("修改人");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Name")
                        .HasComment("名称");

                    b.Property<Guid>("ParentId")
                        .HasColumnType("char(36)")
                        .HasColumnName("ParentId")
                        .HasComment("父级");

                    b.Property<Guid?>("PrimaryEmployeeId")
                        .HasColumnType("char(36)")
                        .HasColumnName("PrimaryEmployeeId")
                        .HasComment("主管Id");

                    b.Property<int>("Sort")
                        .HasColumnType("int")
                        .HasColumnName("Sort")
                        .HasComment("排序");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("char(36)")
                        .HasColumnName("TenantId")
                        .HasComment("租户Id");

                    b.Property<string>("Value")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Value")
                        .HasComment("值");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ParentId" }, "IDX_ParentId")
                        .HasDatabaseName("IDX_ParentId3");

                    b.HasIndex(new[] { "PrimaryEmployeeId" }, "IDX_PrimaryEmployeeId")
                        .HasDatabaseName("IDX_PrimaryEmployeeId1");

                    b.ToTable("Pe_Organization");

                    b.HasComment("组织架构表");
                });

            modelBuilder.Entity("Paas.Pioneer.Admin.Core.Domain.Personnel.Position.Pe_PositionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Code")
                        .HasComment("编码");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("CreatorId")
                        .HasComment("创建人");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Description")
                        .HasComment("说明");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Enabled")
                        .HasComment("启用");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("LastModificationTime")
                        .HasComment("修改时间");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("char(36)")
                        .HasColumnName("LastModifierId")
                        .HasComment("修改人");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Name")
                        .HasComment("名称");

                    b.Property<int>("Sort")
                        .HasColumnType("int")
                        .HasColumnName("Sort")
                        .HasComment("排序");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("char(36)")
                        .HasColumnName("TenantId")
                        .HasComment("租户Id");

                    b.HasKey("Id");

                    b.ToTable("Pe_Position");

                    b.HasComment("职位表");
                });

            modelBuilder.Entity("Paas.Pioneer.Admin.Core.Domain.Role.Ad_RoleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Code")
                        .HasComment("编码");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("CreatorId")
                        .HasComment("创建人");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Description")
                        .HasComment("说明");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Enabled")
                        .HasComment("启用");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("LastModificationTime")
                        .HasComment("修改时间");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("char(36)")
                        .HasColumnName("LastModifierId")
                        .HasComment("修改人");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Name")
                        .HasComment("名称");

                    b.Property<int>("Sort")
                        .HasColumnType("int")
                        .HasColumnName("Sort")
                        .HasComment("排序");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("char(36)")
                        .HasColumnName("TenantId")
                        .HasComment("租户Id");

                    b.HasKey("Id");

                    b.ToTable("Ad_Role");

                    b.HasComment("角色表");
                });

            modelBuilder.Entity("Paas.Pioneer.Admin.Core.Domain.RolePermission.Ad_RolePermissionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("CreatorId")
                        .HasComment("创建人");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("char(36)")
                        .HasColumnName("PermissionId")
                        .HasComment("权限Id");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)")
                        .HasColumnName("RoleId")
                        .HasComment("角色Id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "PermissionId" }, "IDX_PermissionId")
                        .HasDatabaseName("IDX_PermissionId1");

                    b.HasIndex(new[] { "RoleId" }, "IDX_RoleId");

                    b.ToTable("Ad_Role_Permission");

                    b.HasComment("角色权限表");
                });

            modelBuilder.Entity("Paas.Pioneer.Admin.Core.Domain.TenantPermission.Ad_TenantPermissionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("CreatorId")
                        .HasComment("创建人");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("char(36)")
                        .HasColumnName("PermissionId")
                        .HasComment("权限Id");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("char(36)")
                        .HasColumnName("TenantId")
                        .HasComment("租户Id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "PermissionId" }, "IDX_PermissionId")
                        .HasDatabaseName("IDX_PermissionId2");

                    b.ToTable("Ad_Tenant_Permission");

                    b.HasComment("租户权限表");
                });

            modelBuilder.Entity("Paas.Pioneer.Admin.Core.Domain.User.Ad_UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("Avatar")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Avatar")
                        .HasComment("头像");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("CreatorId")
                        .HasComment("创建人");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Enabled")
                        .HasComment("启用");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("LastModificationTime")
                        .HasComment("修改时间");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("char(36)")
                        .HasColumnName("LastModifierId")
                        .HasComment("修改人");

                    b.Property<string>("NickName")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NickName")
                        .HasComment("昵称");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(60)")
                        .HasColumnName("Password")
                        .HasComment("密码");

                    b.Property<string>("Remark")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Remark")
                        .HasComment("备注");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("char(36)")
                        .HasColumnName("TenantId")
                        .HasComment("租户Id");

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("UserName")
                        .HasComment("账号");

                    b.HasKey("Id");

                    b.ToTable("Ad_User");

                    b.HasComment("用户表");
                });

            modelBuilder.Entity("Paas.Pioneer.Admin.Core.Domain.UserRole.Ad_UserRoleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("CreatorId")
                        .HasComment("创建人");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)")
                        .HasColumnName("RoleId")
                        .HasComment("角色Id");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)")
                        .HasColumnName("UserId")
                        .HasComment("用户Id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "RoleId" }, "IDX_RoleId")
                        .HasDatabaseName("IDX_RoleId1");

                    b.HasIndex(new[] { "UserId" }, "IDX_UserId")
                        .HasDatabaseName("IDX_UserId1");

                    b.ToTable("Ad_User_Role");

                    b.HasComment("用户角色表");
                });

            modelBuilder.Entity("Paas.Pioneer.Admin.Core.Domain.View.Ad_ViewEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<bool>("Cache")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Cache")
                        .HasComment("缓存");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("CreatorId")
                        .HasComment("创建人");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Description")
                        .HasComment("说明");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Enabled")
                        .HasComment("启用");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<string>("Label")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Label")
                        .HasComment("视图名称");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("LastModificationTime")
                        .HasComment("修改时间");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("char(36)")
                        .HasColumnName("LastModifierId")
                        .HasComment("修改人");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Name")
                        .HasComment("视图命名");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("char(36)")
                        .HasColumnName("ParentId")
                        .HasComment("所属节点");

                    b.Property<string>("Path")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Path")
                        .HasComment("视图路径");

                    b.Property<int>("Sort")
                        .HasColumnType("int")
                        .HasColumnName("Sort")
                        .HasComment("排序");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ParentId" }, "IDX_ParentId")
                        .HasDatabaseName("IDX_ParentId4");

                    b.ToTable("Ad_View");

                    b.HasComment("视图管理表");
                });

            modelBuilder.Entity("Volo.Abp.TenantManagement.Tenant", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("char(36)")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Enabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("longtext")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("char(36)")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("RealName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid?>("RoleId")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)");

                    b.Property<int?>("TenantType")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserId")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("AbpTenants", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.TenantManagement.TenantConnectionString", b =>
                {
                    b.Property<Guid>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)");

                    b.HasKey("TenantId", "Name");

                    b.ToTable("AbpTenantConnectionStrings", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.TenantManagement.TenantConnectionString", b =>
                {
                    b.HasOne("Volo.Abp.TenantManagement.Tenant", null)
                        .WithMany("ConnectionStrings")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.TenantManagement.Tenant", b =>
                {
                    b.Navigation("ConnectionStrings");
                });
#pragma warning restore 612, 618
        }
    }
}
